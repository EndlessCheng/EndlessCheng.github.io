<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[简言]]></title>
  <subtitle><![CDATA[言简意赅，技术远没那么复杂]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jianyan.me/"/>
  <updated>2014-07-01T00:04:09.008Z</updated>
  <id>http://jianyan.me/</id>
  
  <author>
    <name><![CDATA[EndlessCheng]]></name>
    <email><![CDATA[synapse5@163.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Python 爬虫学习——收集「有趣」信息]]></title>
    <link href="http://jianyan.me/2014/06/24/learning-python-crawler-gathering-interesting-information/"/>
    <id>http://jianyan.me/2014/06/24/learning-python-crawler-gathering-interesting-information/</id>
    <published>2014-06-24T05:36:39.000Z</published>
    <updated>2014-06-29T15:39:05.000Z</updated>
    <content type="html"><![CDATA[<p>我们使用 urllib2 这个组件来抓取网页，这是 Python 的一个获取 URLs (Uniform Resource Locators)的组件，它以 urlopen 函数的形式提供了一个非常简单的接口。</p>
<p>以获取某 <del>id 为 EndlessCheng</del> 用户的 repository 列表为例：<br>（阅读下面代码之前建议先看看<a href="https://github.com/EndlessCheng?tab=repositories" target="_blank" rel="external">该页面</a>的源码）</p>
<p><figure class="highlight python"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="keyword">import</span> urllib2  

USERNAME = <span class="string">'EndlessCheng'</span>
response = urllib2.urlopen(<span class="string">'https://github.com/'</span> + USERNAME + <span class="string">'?tab=repositories'</span>)  
html = response.read()  

STEP = <span class="number">20</span>
cnt = next = <span class="number">1</span>
<span class="keyword">while</span> <span class="keyword">True</span>:
    end = html.find(<span class="string">'&lt;/h3&gt;'</span>, next, len(html)) <span class="comment">#获取repolist-name尾位置</span>
    <span class="keyword">if</span>(end == -<span class="number">1</span>):
        <span class="keyword">break</span>
    next = end + STEP
    end = html.rfind(<span class="string">'&lt;/a&gt;'</span>, <span class="number">0</span>, end) 
    begin = html.rfind(<span class="string">'&gt;'</span>, <span class="number">0</span>, end) + <span class="number">1</span>
    <span class="keyword">print</span> <span class="string">"%3d  %s"</span> % (cnt, html[begin:end])
    cnt += <span class="number">1</span>
</pre></td></tr></table></figure><br>源网页：<br><img src="http://endless.qiniudn.com/blogrepo.png" alt=""><br>输出结果：<br><img src="http://endless.qiniudn.com/blogoutput.png" alt=""></p>
]]></content>
    
    
      <category term="Python" scheme="http://jianyan.me/tags/Python/"/>
    
      <category term="爬虫" scheme="http://jianyan.me/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="GitHub" scheme="http://jianyan.me/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java 与 C++ 混合编程——JNI 学习小记]]></title>
    <link href="http://jianyan.me/2014/06/21/notes-on-java-and-c-programming-jni-blended-learning/"/>
    <id>http://jianyan.me/2014/06/21/notes-on-java-and-c-programming-jni-blended-learning/</id>
    <published>2014-06-21T13:42:13.000Z</published>
    <updated>2014-06-29T15:14:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="缘起">缘起</h2>
<p>最近对<a href="http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/cf44386c8fe3/src/share/classes/java" target="_blank" rel="external">OpenJDK源码</a>产生了很大的兴趣，而其中有较多的 native 方法，如<a href="http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/cf44386c8fe3/src/share/classes/java/lang/System.java" target="_blank" rel="external">System.java</a>中的 arraycopy 方法（第 482 行）、setOut0 方法（第 247 行）等。Google 一下后发现这是 Java Native Interface (JNI)，便花点时间学习了一下。</p>
<h2 id="何谓JNI？">何谓JNI？</h2>
<p>JNI 是 Java 平台中的一个强大特性。<br>应用程序可以通过 JNI 把 C/C++ （或者其他语言）代码集成进 Java 程序中，这样开发者在利用 Java 平台强大功能的同时，又不必放弃对原有代码的投资。</p>
<h2 id="HelloWorld">HelloWorld</h2>
<p>闲话少说，先看代码：</p>
<a id="more"></a>

<p>新建一个 class，名称为 Algorithm</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Algorithm</span> {</span>

	<span class="keyword">static</span> {
		System.loadLibrary(<span class="string">"Hello"</span>);
	}

	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">write</span>(String msg);

	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(String[] args) {
		write(<span class="string">"Hello, 混合编程！"</span>);
	}
}
</pre></td></tr></table></figure><br>保存。<br><br>打开 cmd，cd 到 \src，执行<code>javah Algorithm</code>（如果你的 .java 文件在某一 package 下的话，比如在 \mjava\lang\ 里面，就执行<code>javah mjava.lang.Algorithm</code>），生成<code>Algorithm.h</code>文件，如下：<br><br><figure class="highlight c++"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="comment">/* DO NOT EDIT THIS FILE - it is machine generated */</span>
<span class="preprocessor">#include &lt;jni.h&gt;</span>
<span class="comment">/* Header for class Algorithm */</span>

<span class="preprocessor">#ifndef _Included_Algorithm</span>
<span class="preprocessor">#define _Included_Algorithm</span>
<span class="preprocessor">#ifdef __cplusplus</span>
extern <span class="string">"C"</span> {
<span class="preprocessor">#endif</span>
<span class="comment">/*
 * Class:     Algorithm
 * Method:    write
 * Signature: (Ljava/lang/String;)V
 */</span>
JNIEXPORT <span class="keyword">void</span><span class="constant"> JNICALL </span>Java_Algorithm_write
  (JNIEnv *, jclass, jstring);

<span class="preprocessor">#ifdef __cplusplus</span>
}
<span class="preprocessor">#endif</span>
<span class="preprocessor">#endif</span>
</pre></td></tr></table></figure>

<p>对于 Windows 下的 JDK 来说，可以在 JDK 目录<code>\include\win32\jni_md.h</code>中找到如下定义</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="preprocessor">#<span class="keyword">define</span> JNIEXPORT __declspec(dllexport)</span>
<span class="preprocessor">#<span class="keyword">define</span> JNIIMPORT __declspec(dllimport)</span>
<span class="preprocessor">#<span class="keyword">define</span> JNICALL __stdcall</span>
</pre></td></tr></table></figure><br>其中<code>__declspec</code>用于指定所给定类型的实例的与 Microsoft 相关的存储方式。<br><code>dllexport</code>用来从 dll 中导出函数，数据或对象，<code>dllimport</code>用来从 dll 导入函数，数据，或对象。<br>这相当于定义了 dll 的接口，提供可被 Java 使用的 C/C++ 函数，数据，或对象。<br><code>__stdcall</code>见<a href="http://baike.baidu.com/view/1276580.htm" target="_blank" rel="external">百度百科</a>。<br><code>JNIEnv</code>，<code>jclass</code>和<code>jstring</code>的定义见<code>\include\jni.h</code>，也可以参考<a href="http://wenku.baidu.com/link?url=khOHgORmPEnOlIwZ_Zi7VBnueTNQcSp60EV-Grmiw12bgrLt0YT9rxTQq8PeOiBVecVewsW54EIBdKIt_DogruJUeqHaoYO9rFy8vDWs9Ce" target="_blank" rel="external">jni详解</a>。<br><br><br>随后打开 VS2012，新建 Win32 项目，名称随便：<br><img src="http://endless.qiniudn.com/blogjni01.png" alt=""><br>应用程序类型选择 DLL：<br><img src="http://endless.qiniudn.com/blogjni02.png" alt=""><br>按<code>alt</code>+<code>F7</code>，点击<code>配置属性</code>-<code>VC++目录</code>，如果你的 JDK 是 64 位的话，你的 VS2012 也应该是 64 位，此时做如下修改：（32 位可以无视）<br><img src="http://endless.qiniudn.com/blogjni05.png" alt=""><br>然后点击<code>包含目录</code>-<code>编辑</code>：<br><img src="http://endless.qiniudn.com/blogjni04.png" alt=""><br>点击文件夹图标，把<code>\include\</code>，<code>\include\win32\</code>和<code>Algorithm.h</code>所在目录加进去。<br>随后点击<code>常规</code>，把<code>配置类型</code>改为<code>动态库(.dll)</code>。<br><br>打开<code>&lt;项目名&gt;.cpp</code>，这里<code>&lt;项目名&gt;</code>是你自己输入的名字，输入如下代码：（函数名必须与 Algorithm.h 中声明的一致）<br><figure class="highlight c++"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="preprocessor">#include "stdafx.h"</span>
<span class="preprocessor">#include "Algorithm.h"</span>

<span class="preprocessor">#include &lt;clocale&gt;</span>
<span class="preprocessor">#include &lt;cwchar&gt;</span>

JNIEXPORT <span class="keyword">void</span><span class="constant"> JNICALL </span>Java_Algorithm_write(JNIEnv * env, jclass obj, jstring jMsg)
{
	setlocale(LC_ALL, <span class="string">"Chinese-simplified"</span>); <span class="comment">// clocale</span>
	   wprintf(L<span class="string">"%ls"</span>, (wchar_t*)env-&gt;GetStringChars(jMsg, NULL));
}
</pre></td></tr></table></figure>

<p>这里<code>setlocale</code>函数用来配置地域化信息，<code>GetStringChars</code>函数将 jstring 转化成 jchar 数组并返回 jchar*，这里 jchar 被定义为unsigned short，所以可以转化成 wchar_t 类型。</p>
<p>按<code>F7</code>。</p>
<p>在你的项目文件夹中找到<code>&lt;项目名&gt;.dll</code>文件，复制，粘贴到你的工程下（直接在 Eclipse 中单击工程名然后<code>ctrl</code>+<code>V</code>），并重命名为<code>Hello.dll</code>。</p>
<p>回到 Eclipse，按下<code>Ctrl</code>+<code>F11</code>，Well done！<br><img src="http://endless.qiniudn.com/blogjni06.png" alt=""></p>
<h2 id="More">More</h2>
<p>自定义 readLine() 方法的实现，见<a href="https://github.com/EndlessCheng/OpenJDK-7u4-analysis" target="_blank" rel="external">GitHub</a></p>
]]></content>
    <summary type="html"><![CDATA[<h2 id="缘起">缘起</h2>
<p>最近对<a href="http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/cf44386c8fe3/src/share/classes/java" target="_blank" rel="external">OpenJDK源码</a>产生了很大的兴趣，而其中有较多的 native 方法，如<a href="http://hg.openjdk.java.net/jdk7/jdk7/jdk/file/cf44386c8fe3/src/share/classes/java/lang/System.java" target="_blank" rel="external">System.java</a>中的 arraycopy 方法（第 482 行）、setOut0 方法（第 247 行）等。Google 一下后发现这是 Java Native Interface (JNI)，便花点时间学习了一下。</p>
<h2 id="何谓JNI？">何谓JNI？</h2>
<p>JNI 是 Java 平台中的一个强大特性。<br>应用程序可以通过 JNI 把 C/C++ （或者其他语言）代码集成进 Java 程序中，这样开发者在利用 Java 平台强大功能的同时，又不必放弃对原有代码的投资。</p>
<h2 id="HelloWorld">HelloWorld</h2>
<p>闲话少说，先看代码：</p>
]]></summary>
    
      <category term="混合编程" scheme="http://jianyan.me/tags/%E6%B7%B7%E5%90%88%E7%BC%96%E7%A8%8B/"/>
    
      <category term="JNI" scheme="http://jianyan.me/tags/JNI/"/>
    
      <category term="「Hello World」" scheme="http://jianyan.me/tags/%E3%80%8CHello-World%E3%80%8D/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何搭建免费静态博客——Hexo 与 GitHub 使用小记]]></title>
    <link href="http://jianyan.me/2014/06/21/how-to-build-a-free-static-blog-hexo-and-github-notes/"/>
    <id>http://jianyan.me/2014/06/21/how-to-build-a-free-static-blog-hexo-and-github-notes/</id>
    <published>2014-06-21T11:42:13.000Z</published>
    <updated>2014-06-30T01:30:01.000Z</updated>
    <content type="html"><![CDATA[<h2 id="缘起">缘起</h2>
<p>把网页托管在 GitHub 上有什么好处呢？——秒开。（吐槽下某些空间服务商的速度。。）</p>
<h2 id="快速搭建">快速搭建</h2>
<ol>
<li>首先参见最简单的搭建教程：<a href="http://wsgzao.github.io/hexo-guide/" target="_blank" rel="external">Github+Hexo搭建静态Blog小结</a><br></li>
<li>然后修改成 Jacman 主题：在根目录下右键选择 Git Bash 输入<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/wuchong</span><span class="regexp">/jacman.git themes/jacman</span>
</pre></td></tr></table></figure></li>
<li>修改<code>./_config.yml</code>配置文件中的<code>theme</code>属性，将其设置为<code>jacman</code>。然后在<code>deploy</code><strong>前面</strong>加入<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>stylus:
   <span class="built_in">compress</span>: <span class="constant">true</span>
</pre></td></tr></table></figure></li>
<li>在<code>./source</code>文件夹中建立<code>tags</code>、<code>categories</code>和<code>about</code>文件夹，各文件夹内部新建一个<code>index.md</code>文件。内容分别为：<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>layout: tags
<span class="header">title: tags
---</span>
</pre></td></tr></table></figure><br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>layout: categories
<span class="header">title: categories
---</span>
</pre></td></tr></table></figure><br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="header">title: 关于我
---</span>
&lt;自我介绍&gt;
</pre></td></tr></table></figure></li>
<li>完成上述步骤后在<code>sync</code>时可能会遇到<code>fancybox</code>文件夹内部的文件无法同步的问题，这时需要在<code>./fancybox</code>下右键打开 Git Bash，输入以下内容即可：<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>git add .
git <span class="operator"><span class="keyword">commit</span> -m <span class="string">"update fancybox"</span></span>
</pre></td></tr></table></figure></li>
<li>添加 Disqus（多说明明有回复评论后邮箱提醒却不给我发邮件，差评）：点击 <a href="https://disqus.com/" target="_blank" rel="external">https://disqus.com/</a> 添加站点，填完，记住<code>shortname</code>中填的名字，无视掉验证。然后打开<code>./themes/jacman/_config.yml</code>，找到<code>disqus</code>，修改如下：<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="attribute">disqus</span>: <span class="string"></span>
  <span class="attribute">enable</span>: <span class="string">true</span>
  <span class="attribute">short_name</span>: <span class="string">&lt;你填的名字&gt;</span>
</pre></td></tr></table></figure></li>
<li>添加 RSS：在根目录下运行 Git Bash，输入<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>npm install hexo<span class="attribute">-generator</span><span class="attribute">-feed</span>
</pre></td></tr></table></figure><br>然后编辑<code>./_config.yml</code>，添加如下代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>plugins:
<span class="subst">-</span> hexo<span class="attribute">-generator</span><span class="attribute">-feed</span>
</pre></td></tr></table></figure><br>之后确认在<code>./themes/&lt;你的主题&gt;/_config.yml</code>中有<code>rss: /atom.xml</code>这一行（Jacman 主题自带）</li>
<li>写新文章时，建议在<code>---</code>上方添加<code>description: &lt;文章纲要&gt;</code></li>
<li>添加<a href="http://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">百度统计</a>：有两种方法, 一种是默认加载, 一种是异步加载。<br>默认加载这种方式只需将代码添加至网站全部页面的body标签前, 因此只需要在<code>./themes/&lt;你的主题&gt;/layout/_partial/after_footer.ejs</code>里添加如下代码（这里添加的是我的代码, 请适当修改）<figure class="highlight html"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
<span class="keyword">var</span> _bdhmProtocol = ((<span class="string">"https:"</span> == document.location.protocol) ? <span class="string">" https://"</span> : <span class="string">" http://"</span>);
document.write(<span class="built_in">unescape</span>(<span class="string">"%3Cscript src='"</span> + _bdhmProtocol + <span class="string">"hm.baidu.com/h.js%3Fcfedc723a9dc30bd7db67ad8e53a97fa' type='text/javascript'%3E%3C/script%3E"</span>));
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure><br>百度统计异步代码是以异步加载形式加载了网站分析代码，使用该代码能够大幅提升您网站的打开速度(目前使用百度统计异步代码会导致百度统计图标和代码检查功能的失效).使用这种方式需要将代码添加至网站全部页面的标签前, 因此只需要在<code>./themes/&lt;你的主题&gt;/layout/_partial/head.ejs</code>里添加如下代码（这里添加的是我的代码, 请适当修改）<br><figure class="highlight html"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">
<span class="keyword">var</span> _hmt = _hmt || [];
(<span class="function"><span class="keyword">function</span><span class="params">()</span> {</span>
  <span class="keyword">var</span> hm = document.createElement(<span class="string">"script"</span>);
  hm.src = <span class="string">"//hm.baidu.com/hm.js?cfedc723a9dc30bd7db67ad8e53a97fa"</span>;
  <span class="keyword">var</span> s = document.getElementsByTagName(<span class="string">"script"</span>)[<span class="number">0</span>]; 
  s.parentNode.insertBefore(hm, s);
})();
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure></li>
<li>添加 sitemap：在根目录下运行 Git Bash，输入<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>npm install hexo<span class="attribute">-generator</span><span class="attribute">-sitemap</span>
</pre></td></tr></table></figure><br>然后编辑<code>./_config.yml</code>，添加如下代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>plugins:
<span class="subst">-</span> hexo<span class="attribute">-generator</span><span class="attribute">-sitemap</span>
</pre></td></tr></table></figure><br>随后提交给 Google 网站站长工具即可。</li>
</ol>
]]></content>
    
    
      <category term="Hexo" scheme="http://jianyan.me/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://jianyan.me/tags/GitHub/"/>
    
      <category term="Jacman" scheme="http://jianyan.me/tags/Jacman/"/>
    
  </entry>
  
</feed>
